trigger:
- main

pool: "self-hosted"
variables:
  - group: Black Duck

steps:
- task: BlackDuckSecurityScan@2.0.0
  displayName: 'Black Duck Full Scan'
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  env:
    DETECT_PROJECT_NAME: az-$(Build.Repository.Name)
  inputs:
    BLACKDUCKSCA_URL: $(BLACKDUCKSCA_URL)
    BLACKDUCKSCA_TOKEN: $(BLACKDUCKSCA_TOKEN)
    BLACKDUCKSCASCA_SCAN_FULL: true
    BLACKDUCKSCA_WAITFORSCAN: true   # Used to support the async mode 
    #BLACKDUCKSCA_SCAN_FAILURE_SEVERITIES: 'BLOCKER,CRITICAL'
    #BLACKDUCKSCA_FIXPR_FILTER_SEVERITIES: "CRITICAL,  HIGH"
    #BLACKDUCKSCA_FIXPR_ENABLED: true
    #BLACKDUCKSCA_FIXPR_MAXCOUNT: 2
    #BLACKDUCKSCA_FIXPR_USEUPGRADEGUIDANCE: 'SHORT_TERM,LONG_TERM'
    #AZURE_TOKEN: $(System.AccessToken) # Mandatory when BLACKDUCK_FIXPR_ENABLED is set to 'true'
    # INCLUDE_DIAGNOSTICS: true
    #MARK_BUILD_STATUS: 'SucceededWithIssues'
    DETECT_SEARCH_DEPTH: 4
    DETECT_ARGS: '--blackduck.trust.cert=true --detect.diagnostic=true --detect.accuracy.required=NONE --detect.logging=DEBUG'
    continueOnError: true
        
### Uncomment below configuration to add custom logic based on return status    
# - task: CmdLine@2
#   displayName: 'Command Line'
#   condition: not(eq(variables['BlackDuckSecurityScan.status'], '0'))
#   inputs:
#     script: |
#       echo Black Duck Security Scan exit status - $(BlackDuckSecurityScan.status)      
